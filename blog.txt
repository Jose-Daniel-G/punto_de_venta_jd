php artisan make:model Post -m
php artisan make:model Category -m
php artisan make:factory PostFactory
php artisan make:factory CategoryFactory
php artisan make:factory TagFactory
php artisan make:factory ImageFactory
php artisan make:seeder UserSeeder
php artisan make:seeder PostSeeder 



<!-- 
##posts
##users
##Category 
 -->"# laravel9blog" 
 <!-- para que sirva el slug tiene que estar el plugin jQuery-Plugin-stringToSlug-1.3 en public/vendor 
 DESPUES PONER
    <script src="{{asset('vendor/jQuery-Plugin-stringToSlug-1.3/jquery.stringToSlug.min.js')}}"></script>
   <script>
        $(document).ready(function() {
            $('#name').stringToSlug({
                setEvents: 'keyup keydown blur',
                getPut: '#slug',
                space:'-'
            });
        });
    </script>
 -->


 <!-- php artisan make:controller Admin/CategoryController --model=Category -r

De esa forma crea el controlador, y le asigna el modelo Category, entonces ya incluye al modelo y lo define como el tipo de variable de en los parámetros de las funciones -->


    <script type="text/javascript">
        var baseUrl = { !!json_encode(url('/'))!!}
    </script>


            new DataTable('#usuarios', {
            responsive: true,
            autoWidth: false, //no le vi la funcionalidad
            dom: 'Bfrtip', // Añade el contenedor de botones
            buttons: [
                'copy', 'csv', 'excel', 'pdf', 'print', 'colvis' // Botones que aparecen en la imagen
            ],
            "language": {
                "decimal": "",
                "emptyTable": "No hay datos disponibles en la tabla",
                "info": "Mostrando _START_ a _END_ de _TOTAL_ entradas",
                "infoEmpty": "Mostrando 0 a 0 de 0 entradas",
                "infoFiltered": "(filtrado de _MAX_ entradas totales)",
                "infoPostFix": "",
                "thousands": ",",
                "lengthMenu": "Mostrar _MENU_ entradas",
                "loadingRecords": "Cargando...",
                "processing": "",
                "search": "Buscar:",
                "zeroRecords": "No se encontraron registros coincidentes",
                "paginate": {
                    "first": "Primero",
                    "last": "Último",
                    "next": "Siguiente",
                    "previous": "Anterior"
                },
                "aria": {
                    "orderable": "Ordenar por esta columna",
                    "orderableReverse": "Invertir el orden de esta columna"
                }
            }

        });